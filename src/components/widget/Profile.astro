---
import { Icon } from "astro-icon/components";
import { profileConfig } from "../../config";
import { url } from "../../utils/url-utils";
import ImageWrapper from "../misc/ImageWrapper.astro";

const config = profileConfig;

// 弹窗二维码默认图（可被每个 link 的 popupImage 覆盖）
const fallbackQR = "/wechat-qrcode.png";
---

<div class="card-base p-3">
  <a
    aria-label="Go to About Page"
    href={url('/about/')}
    class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
           max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95"
  >
    <div
      class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
             w-full h-full z-50 flex items-center justify-center"
    >
      <Icon
        name="fa6-regular:address-card"
        class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl"
      />
    </div>
    <ImageWrapper
      src={config.avatar || ""}
      alt="Profile Image of the Author"
      class="mx-auto lg:w-full h-full lg:mt-0 "
    />
  </a>

  <div class="px-2">
    <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">
      {config.name}
    </div>
    <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
    <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>

    <!-- 社交图标：支持 popup（弹二维码） -->
    <div class="flex gap-2 justify-center mb-1">
      {
        // 多个链接：逐个渲染（带弹窗判断）
        config.links.length > 1
          ? config.links.map((item) => (
              item?.popup
                ? (
                  <button
                    type="button"
                    rel="me"
                    aria-label={item.name}
                    class="btn-regular rounded-lg h-10 w-10 active:scale-90"
                    data-qr-trigger
                    data-qr-src={item.popupImage ?? fallbackQR}
                    title={item.name}
                  >
                    <Icon name={item.icon} class="text-[1.5rem]" />
                  </button>
                )
                : (
                  <a
                    rel="me"
                    aria-label={item.name}
                    href={item.url}
                    target="_blank"
                    class="btn-regular rounded-lg h-10 w-10 active:scale-90"
                    title={item.name}
                  >
                    <Icon name={item.icon} class="text-[1.5rem]" />
                  </a>
                )
            ))
          : (
            // 只有一个链接：保留原有“大按钮”样式，同时兼容 popup
            config.links[0]?.popup
              ? (
                <button
                  type="button"
                  rel="me"
                  aria-label={config.links[0].name}
                  class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95"
                  data-qr-trigger
                  data-qr-src={config.links[0].popupImage ?? fallbackQR}
                  title={config.links[0].name}
                >
                  <Icon name={config.links[0].icon} class="text-[1.5rem]" />
                  {config.links[0].name}
                </button>
              )
              : (
                <a
                  rel="me"
                  aria-label={config.links[0].name}
                  href={config.links[0].url}
                  target="_blank"
                  class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95"
                  title={config.links[0].name}
                >
                  <Icon name={config.links[0].icon} class="text-[1.5rem]" />
                  {config.links[0].name}
                </a>
              )
          )
      }
    </div>
  </div>
</div>

<!-- 弹窗：支持打开/关闭动画 + 背景渐暗 -->
<dialog id="profile-qr-modal" class="rounded-2xl p-0">
  <!-- 内容容器：宽度限制在 90vw，最大 400px，高度不固定 -->
  <div
    id="profile-qr-content"
    class="bg-white dark:bg-neutral-900 p-4 sm:p-6 rounded-2xl
           transform transition-all duration-220 ease-out
           scale-95 opacity-0
           max-w-[90vw] w-full sm:w-auto sm:max-w-[400px]"
  >
    <!-- 图片：宽度 100%（受容器限制），高度自适应 -->
    <img id="profile-qr-img"
         src="/wechat-qrcode.png"
         alt="二维码"
         class="w-full h-auto object-contain mx-auto" />

    <!-- <p class="text-center mt-3 text-neutral-700 dark:text-neutral-300">
      长按/扫描二维码关注我！
    </p> -->

    <div class="mt-4 flex justify-center">
      <button type="button" id="profile-qr-close"
        class="px-4 py-2 rounded-lg bg-[var(--primary)] text-white hover:opacity-90">
        关闭
      </button>
    </div>
  </div>
</dialog>


<script is:inline>
  const modal = document.getElementById('profile-qr-modal');
  const content = document.getElementById('profile-qr-content');
  const img = document.getElementById('profile-qr-img');
  const closeBtn = document.getElementById('profile-qr-close');

  // 打开：先 showModal，再触发内容放大淡入 & 背景渐暗动画
  document.addEventListener('click', (e) => {
    const btn = e.target.closest?.('[data-qr-trigger]');
    if (!btn) return;

    e.preventDefault();
    const src = btn.getAttribute('data-qr-src') || '/wechat-qrcode.png';
    img.setAttribute('src', src);

    modal.showModal();
    // 添加类名，驱动 ::backdrop 的 CSS 动画
    modal.classList.remove('is-closing');
    modal.classList.add('is-open');

    // 下一帧把内容从 scale-95/opacity-0 过渡到 100/100
    requestAnimationFrame(() => {
      content.classList.remove('scale-95', 'opacity-0');
      content.classList.add('scale-100', 'opacity-100');
    });
  });

  function animateClose() {
    // 内容淡出缩小
    content.classList.remove('scale-100', 'opacity-100');
    content.classList.add('scale-95', 'opacity-0');

    // 背景渐亮
    modal.classList.remove('is-open');
    modal.classList.add('is-closing');

    // 等待动画结束再真正关闭（保持与 CSS 动画时长一致）
    setTimeout(() => modal.close(), 220);
  }

  closeBtn?.addEventListener('click', animateClose);

  // 点击遮罩关闭（点击对话框外部区域）
  modal?.addEventListener('click', (e) => {
    const r = modal.getBoundingClientRect();
    if (e.clientX < r.left || e.clientX > r.right || e.clientY < r.top || e.clientY > r.bottom) {
      animateClose();
    }
  });
</script>

<style is:global>
  /* 初始：无背景（避免 showModal 瞬间全黑） */
  dialog::backdrop {
    background: rgba(0,0,0,0);
  }
  /* 打开时：背景从 0 → 0.5 渐暗 */
  dialog.is-open::backdrop {
    animation: backdrop-in 220ms ease-out forwards;
  }
  /* 关闭时：背景从 0.5 → 0 渐亮 */
  dialog.is-closing::backdrop {
    animation: backdrop-out 220ms ease-in forwards;
  }
  @keyframes backdrop-in {
    from { background: rgba(0,0,0,0); }
    to   { background: rgba(0,0,0,0.5); }
  }
  @keyframes backdrop-out {
    from { background: rgba(0,0,0,0.5); }
    to   { background: rgba(0,0,0,0); }
  }
</style>
