---
import { Icon } from "astro-icon/components";
import { profileConfig } from "../../config";
import { url } from "../../utils/url-utils";
import ImageWrapper from "../misc/ImageWrapper.astro";

const config = profileConfig;
const fallbackQR = "/wechat-qrcode.png";
---

<div class="card-base p-3">
  <a
    aria-label="Go to About Page"
    href={url('/about/')}
    class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
           max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95"
  >
    <div
      class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
             w-full h-full z-50 flex items-center justify-center"
    >
      <Icon
        name="fa6-regular:address-card"
        class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl"
      />
    </div>
    <ImageWrapper
      src={config.avatar || ""}
      alt="Profile Image of the Author"
      class="mx-auto lg:w-full h-full lg:mt-0 "
    />
  </a>

  <div class="px-2">
    <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">
      {config.name}
    </div>
    <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
    <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>

    <!-- 社交图标：支持 popup（弹二维码） -->
    <div class="flex gap-2 justify-center mb-1">
      {
        config.links.length > 1
          ? config.links.map((item) => (
              item?.popup
                ? (
                  <button
                    type="button"
                    aria-label={item.name}
                    class="btn-regular rounded-lg h-10 w-10 active:scale-90"
                    data-qr-trigger
                    data-qr-src={item.popupImage ?? fallbackQR}
                    title={item.name}
                  >
                    <Icon name={item.icon} class="text-[1.5rem]" />
                  </button>
                )
                : (
                  <a
                    rel="me"
                    aria-label={item.name}
                    href={item.url}
                    target="_blank"
                    class="btn-regular rounded-lg h-10 w-10 active:scale-90"
                    title={item.name}
                  >
                    <Icon name={item.icon} class="text-[1.5rem]" />
                  </a>
                )
            ))
          : (
            config.links[0]?.popup
              ? (
                <button
                  type="button"
                  aria-label={config.links[0].name}
                  class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95"
                  data-qr-trigger
                  data-qr-src={config.links[0].popupImage ?? fallbackQR}
                  title={config.links[0].name}
                >
                  <Icon name={config.links[0].icon} class="text-[1.5rem]" />
                  {config.links[0].name}
                </button>
              )
              : (
                <a
                  rel="me"
                  aria-label={config.links[0].name}
                  href={config.links[0].url}
                  target="_blank"
                  class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95"
                  title={config.links[0].name}
                >
                  <Icon name={config.links[0].icon} class="text-[1.5rem]" />
                  {config.links[0].name}
                </a>
              )
          )
      }
    </div>
  </div>
</div>

<!-- 弹窗 -->
<dialog id="profile-qr-modal" class="modal">
  <div id="profile-qr-content" class="modal-card">
    <img id="profile-qr-img"
         src="/wechat-qrcode.png"
         alt="二维码"
         class="qr-img" />
    <div class="btn-row">
      <button type="button" id="profile-qr-close" class="btn-close">关闭</button>
    </div>
  </div>
</dialog>

<script is:inline>
  const modal = document.getElementById('profile-qr-modal');
  const content = document.getElementById('profile-qr-content');
  const img = document.getElementById('profile-qr-img');
  const closeBtn = document.getElementById('profile-qr-close');

  // 打开
  document.addEventListener('click', (e) => {
    const btn = e.target.closest?.('[data-qr-trigger]');
    if (!btn) return;
    e.preventDefault();

    const src = btn.getAttribute('data-qr-src') || '/wechat-qrcode.png';
    img.setAttribute('src', src);

    modal.showModal();
    modal.classList.remove('is-closing');
    // 强制 reflow
    content.offsetHeight;
    modal.classList.add('is-open');
  });

  // 关闭
  function animateClose() {
    if (!modal.open) return;
    modal.classList.remove('is-open');
    modal.classList.add('is-closing');
  }

  closeBtn?.addEventListener('click', animateClose);

  // 点击遮罩关闭
  modal?.addEventListener('click', (e) => {
    const r = content.getBoundingClientRect();
    if (e.clientX < r.left || e.clientX > r.right || e.clientY < r.top || e.clientY > r.bottom) {
      animateClose();
    }
  });

  // 动画结束时真正关闭
  content.addEventListener('transitionend', (ev) => {
    if (ev.propertyName === 'opacity' && modal.classList.contains('is-closing')) {
      modal.close();
      modal.classList.remove('is-closing', 'is-open');
    }
  });

  // 页面离开时兜底关闭
  window.addEventListener('pagehide', () => {
    if (modal.open) modal.close();
    modal.classList.remove('is-open', 'is-closing');
  });
</script>

<style is:global>
  /* 基础 */
  .modal {
    padding: 0;
    border: none;
    background: transparent;
    pointer-events: none;
  }
  .modal[open] {
    display: grid;
    place-items: center;
    inset: 0;
    pointer-events: auto;
  }

  /* 背景 */
  .modal::backdrop { background: rgba(0,0,0,0); }
  .modal.is-open::backdrop {
    animation: backdrop-in 220ms cubic-bezier(.2,.8,.2,1) forwards;
  }
  .modal.is-closing::backdrop {
    animation: backdrop-out 200ms ease-in forwards;
  }
  @keyframes backdrop-in   { from { background: rgba(0,0,0,0); } to { background: rgba(0,0,0,.5); } }
  @keyframes backdrop-out  { from { background: rgba(0,0,0,.5); } to { background: rgba(0,0,0,0); } }

  /* 内容卡片 */
  .modal-card {
    max-width: min(90vw, 420px);
    width: 100%;
    margin: 0 16px;
    border-radius: 16px;
    background: var(--card-bg, white);
    color: inherit;
    padding: 1rem 1rem 0.875rem;
    box-shadow: 0 10px 30px rgba(0,0,0,.25);

    transform: scale(.96);
    opacity: 0;
    transition: transform 220ms cubic-bezier(.2,.8,.2,1), opacity 220ms ease-out;
    will-change: transform, opacity;
  }
  .modal.is-open .modal-card {
    transform: scale(1);
    opacity: 1;
  }
  .modal.is-closing .modal-card {
    transform: scale(.96);
    opacity: 0;
    transition-duration: 180ms;
  }

  /* 图片与按钮 */
  .qr-img { display:block; width:100%; height:auto; max-height:80vh; object-fit:contain; border-radius:8px; background:transparent; }
  .btn-row { display:flex; justify-content:center; margin-top:0.875rem; }
  .btn-close { padding:0.5rem 1rem; border-radius:10px; background:var(--primary); color:#fff; cursor:pointer; }
</style>
